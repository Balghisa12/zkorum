/* tslint:disable */
/* eslint-disable */
/**
 * ZKorum
 * ZKorum backend
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface AuthAuthenticatePost200Response
 */
export interface AuthAuthenticatePost200Response {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost200Response
     */
    'codeExpiry': string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost200Response
     */
    'nextCodeSoonestTime': string;
}
/**
 * 
 * @export
 * @interface AuthAuthenticatePost409Response
 */
export interface AuthAuthenticatePost409Response {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409Response
     */
    'reason': AuthAuthenticatePost409ResponseReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409Response
     */
    'userId': string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409Response
     */
    'encryptedSymmKey': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthAuthenticatePost409Response
     */
    'syncingDevices': Array<string>;
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; }}
     * @memberof AuthAuthenticatePost409Response
     */
    'emailCredentialsPerEmail': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; };
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; }}
     * @memberof AuthAuthenticatePost409Response
     */
    'secretCredentialsPerType': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; };
}

export const AuthAuthenticatePost409ResponseReasonEnum = {
    AlreadyLoggedIn: 'already_logged_in'
} as const;

export type AuthAuthenticatePost409ResponseReasonEnum = typeof AuthAuthenticatePost409ResponseReasonEnum[keyof typeof AuthAuthenticatePost409ResponseReasonEnum];

/**
 * 
 * @export
 * @interface AuthAuthenticatePost409ResponseAnyOf
 */
export interface AuthAuthenticatePost409ResponseAnyOf {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf
     */
    'reason': AuthAuthenticatePost409ResponseAnyOfReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf
     */
    'userId': string;
}

export const AuthAuthenticatePost409ResponseAnyOfReasonEnum = {
    AwaitingSyncing: 'awaiting_syncing'
} as const;

export type AuthAuthenticatePost409ResponseAnyOfReasonEnum = typeof AuthAuthenticatePost409ResponseAnyOfReasonEnum[keyof typeof AuthAuthenticatePost409ResponseAnyOfReasonEnum];

/**
 * 
 * @export
 * @interface AuthAuthenticatePost409ResponseAnyOf1
 */
export interface AuthAuthenticatePost409ResponseAnyOf1 {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'reason': AuthAuthenticatePost409ResponseAnyOf1ReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'userId': string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'encryptedSymmKey': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'syncingDevices': Array<string>;
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; }}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'emailCredentialsPerEmail': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; };
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; }}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1
     */
    'secretCredentialsPerType': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; };
}

export const AuthAuthenticatePost409ResponseAnyOf1ReasonEnum = {
    AlreadyLoggedIn: 'already_logged_in'
} as const;

export type AuthAuthenticatePost409ResponseAnyOf1ReasonEnum = typeof AuthAuthenticatePost409ResponseAnyOf1ReasonEnum[keyof typeof AuthAuthenticatePost409ResponseAnyOf1ReasonEnum];

/**
 * 
 * @export
 * @interface AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue
 */
export interface AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue
     */
    'active'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue
     */
    'revoked': Array<string>;
}
/**
 * 
 * @export
 * @interface AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue
 */
export interface AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue {
    /**
     * 
     * @type {AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue
     */
    'active'?: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive;
    /**
     * 
     * @type {Array<AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive>}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue
     */
    'revoked': Array<AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive>;
}
/**
 * 
 * @export
 * @interface AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive
 */
export interface AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive {
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive
     */
    'blindedCredential': string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive
     */
    'encryptedBlinding': string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValueActive
     */
    'encryptedBlindedSubject': string;
}
/**
 * 
 * @export
 * @interface AuthAuthenticatePostRequest
 */
export interface AuthAuthenticatePostRequest {
    /**
     * Email address
     * @type {string}
     * @memberof AuthAuthenticatePostRequest
     */
    'email': string;
    /**
     * Decentralized Identifier with did:key method
     * @type {string}
     * @memberof AuthAuthenticatePostRequest
     */
    'didExchange': string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthAuthenticatePostRequest
     */
    'isRequestingNewCode': boolean;
}
/**
 * 
 * @export
 * @interface AuthSyncPost409Response
 */
export interface AuthSyncPost409Response {
    /**
     * 
     * @type {string}
     * @memberof AuthSyncPost409Response
     */
    'reason': AuthSyncPost409ResponseReasonEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthSyncPost409Response
     */
    'userId': string;
}

export const AuthSyncPost409ResponseReasonEnum = {
    AlreadySyncing: 'already_syncing'
} as const;

export type AuthSyncPost409ResponseReasonEnum = typeof AuthSyncPost409ResponseReasonEnum[keyof typeof AuthSyncPost409ResponseReasonEnum];

/**
 * 
 * @export
 * @interface AuthSyncPostRequest
 */
export interface AuthSyncPostRequest {
    /**
     * Email address
     * @type {string}
     * @memberof AuthSyncPostRequest
     */
    'email': string;
    /**
     * 
     * @type {string}
     * @memberof AuthSyncPostRequest
     */
    'secretBlindedCredentialRequest'?: string;
}
/**
 * 
 * @export
 * @interface AuthVerifyOtpPost200Response
 */
export interface AuthVerifyOtpPost200Response {
    /**
     * 
     * @type {boolean}
     * @memberof AuthVerifyOtpPost200Response
     */
    'success': boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200Response
     */
    'userId': string;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200Response
     */
    'encryptedSymmKey'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthVerifyOtpPost200Response
     */
    'syncingDevices': Array<string>;
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; }}
     * @memberof AuthVerifyOtpPost200Response
     */
    'emailCredentialsPerEmail': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; };
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; }}
     * @memberof AuthVerifyOtpPost200Response
     */
    'secretCredentialsPerType': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; };
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200Response
     */
    'reason': AuthVerifyOtpPost200ResponseReasonEnum;
}

export const AuthVerifyOtpPost200ResponseReasonEnum = {
    ExpiredCode: 'expired_code',
    WrongGuess: 'wrong_guess',
    TooManyWrongGuess: 'too_many_wrong_guess'
} as const;

export type AuthVerifyOtpPost200ResponseReasonEnum = typeof AuthVerifyOtpPost200ResponseReasonEnum[keyof typeof AuthVerifyOtpPost200ResponseReasonEnum];

/**
 * 
 * @export
 * @interface AuthVerifyOtpPost200ResponseAnyOf
 */
export interface AuthVerifyOtpPost200ResponseAnyOf {
    /**
     * 
     * @type {boolean}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'success': boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'userId': string;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'encryptedSymmKey'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'syncingDevices': Array<string>;
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; }}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'emailCredentialsPerEmail': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; };
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; }}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf
     */
    'secretCredentialsPerType': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; };
}
/**
 * 
 * @export
 * @interface AuthVerifyOtpPost200ResponseAnyOf1
 */
export interface AuthVerifyOtpPost200ResponseAnyOf1 {
    /**
     * 
     * @type {boolean}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf1
     */
    'success': boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPost200ResponseAnyOf1
     */
    'reason': AuthVerifyOtpPost200ResponseAnyOf1ReasonEnum;
}

export const AuthVerifyOtpPost200ResponseAnyOf1ReasonEnum = {
    ExpiredCode: 'expired_code',
    WrongGuess: 'wrong_guess',
    TooManyWrongGuess: 'too_many_wrong_guess'
} as const;

export type AuthVerifyOtpPost200ResponseAnyOf1ReasonEnum = typeof AuthVerifyOtpPost200ResponseAnyOf1ReasonEnum[keyof typeof AuthVerifyOtpPost200ResponseAnyOf1ReasonEnum];

/**
 * 
 * @export
 * @interface AuthVerifyOtpPostRequest
 */
export interface AuthVerifyOtpPostRequest {
    /**
     * 
     * @type {number}
     * @memberof AuthVerifyOtpPostRequest
     */
    'code': number;
    /**
     * 
     * @type {string}
     * @memberof AuthVerifyOtpPostRequest
     */
    'encryptedSymmKey': string;
}
/**
 * 
 * @export
 * @interface CredentialGetPost200Response
 */
export interface CredentialGetPost200Response {
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; }}
     * @memberof CredentialGetPost200Response
     */
    'emailCredentialsPerEmail': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1EmailCredentialsPerEmailValue; };
    /**
     * 
     * @type {{ [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; }}
     * @memberof CredentialGetPost200Response
     */
    'secretCredentialsPerType': { [key: string]: AuthAuthenticatePost409ResponseAnyOf1SecretCredentialsPerTypeValue; };
}
/**
 * 
 * @export
 * @interface CredentialRequestPostRequest
 */
export interface CredentialRequestPostRequest {
    /**
     * Email address
     * @type {string}
     * @memberof CredentialRequestPostRequest
     */
    'email': string;
    /**
     * 
     * @type {CredentialRequestPostRequestEmailCredentialRequest}
     * @memberof CredentialRequestPostRequest
     */
    'emailCredentialRequest': CredentialRequestPostRequestEmailCredentialRequest;
    /**
     * 
     * @type {CredentialRequestPostRequestSecretCredentialRequest}
     * @memberof CredentialRequestPostRequest
     */
    'secretCredentialRequest': CredentialRequestPostRequestSecretCredentialRequest;
}
/**
 * 
 * @export
 * @interface CredentialRequestPostRequestEmailCredentialRequest
 */
export interface CredentialRequestPostRequestEmailCredentialRequest {
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequest
     */
    'type': CredentialRequestPostRequestEmailCredentialRequestTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequest
     */
    'campus': CredentialRequestPostRequestEmailCredentialRequestCampusEnum;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequest
     */
    'program': CredentialRequestPostRequestEmailCredentialRequestProgramEnum;
    /**
     * 
     * @type {CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries}
     * @memberof CredentialRequestPostRequestEmailCredentialRequest
     */
    'countries': CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequest
     */
    'admissionYear': number;
}

export const CredentialRequestPostRequestEmailCredentialRequestTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestTypeEnum = typeof CredentialRequestPostRequestEmailCredentialRequestTypeEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestTypeEnum];
export const CredentialRequestPostRequestEmailCredentialRequestCampusEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestCampusEnum = typeof CredentialRequestPostRequestEmailCredentialRequestCampusEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestCampusEnum];
export const CredentialRequestPostRequestEmailCredentialRequestProgramEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestProgramEnum = typeof CredentialRequestPostRequestEmailCredentialRequestProgramEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestProgramEnum];

/**
 * 
 * @export
 * @interface CredentialRequestPostRequestEmailCredentialRequestAnyOf
 */
export interface CredentialRequestPostRequestEmailCredentialRequestAnyOf {
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf
     */
    'type': CredentialRequestPostRequestEmailCredentialRequestAnyOfTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf
     */
    'campus': CredentialRequestPostRequestEmailCredentialRequestAnyOfCampusEnum;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf
     */
    'program': CredentialRequestPostRequestEmailCredentialRequestAnyOfProgramEnum;
    /**
     * 
     * @type {CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf
     */
    'countries': CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries;
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf
     */
    'admissionYear': number;
}

export const CredentialRequestPostRequestEmailCredentialRequestAnyOfTypeEnum = {
    NUMBER_0: 0
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestAnyOfTypeEnum = typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfTypeEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfTypeEnum];
export const CredentialRequestPostRequestEmailCredentialRequestAnyOfCampusEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestAnyOfCampusEnum = typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfCampusEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfCampusEnum];
export const CredentialRequestPostRequestEmailCredentialRequestAnyOfProgramEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3,
    NUMBER_4: 4,
    NUMBER_5: 5
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestAnyOfProgramEnum = typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfProgramEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestAnyOfProgramEnum];

/**
 * 
 * @export
 * @interface CredentialRequestPostRequestEmailCredentialRequestAnyOf1
 */
export interface CredentialRequestPostRequestEmailCredentialRequestAnyOf1 {
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf1
     */
    'type': CredentialRequestPostRequestEmailCredentialRequestAnyOf1TypeEnum;
}

export const CredentialRequestPostRequestEmailCredentialRequestAnyOf1TypeEnum = {
    NUMBER_1: 1
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestAnyOf1TypeEnum = typeof CredentialRequestPostRequestEmailCredentialRequestAnyOf1TypeEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestAnyOf1TypeEnum];

/**
 * 
 * @export
 * @interface CredentialRequestPostRequestEmailCredentialRequestAnyOf2
 */
export interface CredentialRequestPostRequestEmailCredentialRequestAnyOf2 {
    /**
     * 
     * @type {number}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOf2
     */
    'type': CredentialRequestPostRequestEmailCredentialRequestAnyOf2TypeEnum;
}

export const CredentialRequestPostRequestEmailCredentialRequestAnyOf2TypeEnum = {
    NUMBER_2: 2
} as const;

export type CredentialRequestPostRequestEmailCredentialRequestAnyOf2TypeEnum = typeof CredentialRequestPostRequestEmailCredentialRequestAnyOf2TypeEnum[keyof typeof CredentialRequestPostRequestEmailCredentialRequestAnyOf2TypeEnum];

/**
 * 
 * @export
 * @interface CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
 */
export interface CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries {
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AQ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AX': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'AZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BB': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BJ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BQ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'BZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CX': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'CZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DJ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'DZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'EC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'EE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'EG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'EH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ER': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ES': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ET': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FJ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'FR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GB': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GP': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GQ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'GY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'HU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ID': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IQ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'IT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'JE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'JM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'JO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'JP': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KP': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'KZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LB': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'LY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ME': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ML': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MP': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MQ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MX': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'MZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NP': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'NZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'OM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'PY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'QA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'RE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'RO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'RS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'RU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'RW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SB': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SJ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ST': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SX': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'SZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TD': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TH': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TJ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TL': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TO': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TR': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TV': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TW': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'TZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'UA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'UG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'UM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'US': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'UY': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'UZ': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VC': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VG': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VI': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VN': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'VU': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'WF': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'WS': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'XK': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'YE': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'YT': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ZA': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ZM': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CredentialRequestPostRequestEmailCredentialRequestAnyOfCountries
     */
    'ZW': boolean;
}
/**
 * 
 * @export
 * @interface CredentialRequestPostRequestSecretCredentialRequest
 */
export interface CredentialRequestPostRequestSecretCredentialRequest {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof CredentialRequestPostRequestSecretCredentialRequest
     */
    'blindedRequest': { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof CredentialRequestPostRequestSecretCredentialRequest
     */
    'encryptedEncodedBlindedSubject': string;
    /**
     * 
     * @type {string}
     * @memberof CredentialRequestPostRequestSecretCredentialRequest
     */
    'encryptedEncodedBlinding': string;
}

/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @param {AuthAuthenticatePostRequest} authAuthenticatePostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authAuthenticatePost: async (authAuthenticatePostRequest: AuthAuthenticatePostRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'authAuthenticatePostRequest' is not null or undefined
            assertParamExists('authAuthenticatePost', 'authAuthenticatePostRequest', authAuthenticatePostRequest)
            const localVarPath = `/auth/authenticate`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(authAuthenticatePostRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authLogoutPost: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/auth/logout`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {AuthSyncPostRequest} authSyncPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authSyncPost: async (authSyncPostRequest: AuthSyncPostRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'authSyncPostRequest' is not null or undefined
            assertParamExists('authSyncPost', 'authSyncPostRequest', authSyncPostRequest)
            const localVarPath = `/auth/sync`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(authSyncPostRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {AuthVerifyOtpPostRequest} authVerifyOtpPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authVerifyOtpPost: async (authVerifyOtpPostRequest: AuthVerifyOtpPostRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'authVerifyOtpPostRequest' is not null or undefined
            assertParamExists('authVerifyOtpPost', 'authVerifyOtpPostRequest', authVerifyOtpPostRequest)
            const localVarPath = `/auth/verifyOtp`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(authVerifyOtpPostRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        credentialGetPost: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/credential/get`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @param {CredentialRequestPostRequest} credentialRequestPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        credentialRequestPost: async (credentialRequestPostRequest: CredentialRequestPostRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'credentialRequestPostRequest' is not null or undefined
            assertParamExists('credentialRequestPost', 'credentialRequestPostRequest', credentialRequestPostRequest)
            const localVarPath = `/credential/request`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(credentialRequestPostRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @param {AuthAuthenticatePostRequest} authAuthenticatePostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async authAuthenticatePost(authAuthenticatePostRequest: AuthAuthenticatePostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthAuthenticatePost200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.authAuthenticatePost(authAuthenticatePostRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async authLogoutPost(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.authLogoutPost(options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {AuthSyncPostRequest} authSyncPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async authSyncPost(authSyncPostRequest: AuthSyncPostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.authSyncPost(authSyncPostRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {AuthVerifyOtpPostRequest} authVerifyOtpPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async authVerifyOtpPost(authVerifyOtpPostRequest: AuthVerifyOtpPostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthVerifyOtpPost200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.authVerifyOtpPost(authVerifyOtpPostRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async credentialGetPost(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CredentialGetPost200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.credentialGetPost(options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @param {CredentialRequestPostRequest} credentialRequestPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async credentialRequestPost(credentialRequestPostRequest: CredentialRequestPostRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CredentialGetPost200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.credentialRequestPost(credentialRequestPostRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * 
         * @param {AuthAuthenticatePostRequest} authAuthenticatePostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authAuthenticatePost(authAuthenticatePostRequest: AuthAuthenticatePostRequest, options?: any): AxiosPromise<AuthAuthenticatePost200Response> {
            return localVarFp.authAuthenticatePost(authAuthenticatePostRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authLogoutPost(options?: any): AxiosPromise<void> {
            return localVarFp.authLogoutPost(options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {AuthSyncPostRequest} authSyncPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authSyncPost(authSyncPostRequest: AuthSyncPostRequest, options?: any): AxiosPromise<void> {
            return localVarFp.authSyncPost(authSyncPostRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {AuthVerifyOtpPostRequest} authVerifyOtpPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        authVerifyOtpPost(authVerifyOtpPostRequest: AuthVerifyOtpPostRequest, options?: any): AxiosPromise<AuthVerifyOtpPost200Response> {
            return localVarFp.authVerifyOtpPost(authVerifyOtpPostRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        credentialGetPost(options?: any): AxiosPromise<CredentialGetPost200Response> {
            return localVarFp.credentialGetPost(options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @param {CredentialRequestPostRequest} credentialRequestPostRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        credentialRequestPost(credentialRequestPostRequest: CredentialRequestPostRequest, options?: any): AxiosPromise<CredentialGetPost200Response> {
            return localVarFp.credentialRequestPost(credentialRequestPostRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * 
     * @param {AuthAuthenticatePostRequest} authAuthenticatePostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public authAuthenticatePost(authAuthenticatePostRequest: AuthAuthenticatePostRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).authAuthenticatePost(authAuthenticatePostRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public authLogoutPost(options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).authLogoutPost(options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {AuthSyncPostRequest} authSyncPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public authSyncPost(authSyncPostRequest: AuthSyncPostRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).authSyncPost(authSyncPostRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {AuthVerifyOtpPostRequest} authVerifyOtpPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public authVerifyOtpPost(authVerifyOtpPostRequest: AuthVerifyOtpPostRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).authVerifyOtpPost(authVerifyOtpPostRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public credentialGetPost(options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).credentialGetPost(options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @param {CredentialRequestPostRequest} credentialRequestPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public credentialRequestPost(credentialRequestPostRequest: CredentialRequestPostRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).credentialRequestPost(credentialRequestPostRequest, options).then((request) => request(this.axios, this.basePath));
    }
}



